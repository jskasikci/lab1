{
    "info": {
        "_postman_id": "2c93dd90-6931-43af-8565-6737d55af585",
        "name": "devops_tutorial",
        "description": "Swagger tutorial",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "_exporter_id": "3889785"
    },
    "item": [
        {
            "name": "student",
            "item": [
                {
                    "name": "1.Add a new student",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function() { pm.response.to.have.status(200); });",
                                    "pm.test(\"Response should not be 'do some magic!'\", function() { pm.response.to.not.have.body(\"do some magic!\"); });",
                                    "var jsonData = pm.response.json();",
                                    "pm.environment.set(\"student_id\", 0);",
                                    "console.log(\"Student ID set to: 0\");"
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    "function random_string(size) {",
                                    "    var str = \"\";",
                                    "    for (var i = 0; i < size; i++) {",
                                    "        str += random_character();",
                                    "    }",
                                    "    return str;",
                                    "}",
                                    "function random_character() {",
                                    "    var chars = \"0123456789abcdefghijklmnopqurstuvwxyzABCDEFGHIJKLMNOPQURSTUVWXYZ\";",
                                    "    return chars.substr(Math.floor(Math.random() * 62), 1);",
                                    "}",
                                    "var first_name = random_string(20);",
                                    "var last_name = random_string(20);",
                                    "pm.environment.set(\"first_name\", first_name);",
                                    "pm.environment.set(\"last_name\", last_name);",
                                    "var start = new Date().getTime();",
                                    "pm.environment.set(\"start_time\", start);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "noauth"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"first_name\": \"{{first_name}}\",\n  \"last_name\": \"{{last_name}}\",\n  \"grade_records\": [\n    {\n      \"grade\": 6.0274563,\n      \"subject_name\": \"subject_name\"\n    },\n    {\n      \"grade\": 6.0274563,\n      \"subject_name\": \"subject_name\"\n    }\n  ],\n  \"student_id\": 0\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/student",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "student"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "2.Find student by ID",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function() { pm.response.to.have.status(200); });",
                                    "pm.test(\"Response should not be 'do some magic!'\", function() { pm.response.to.not.have.body(\"do some magic!\"); });",
                                    "var jsonData = pm.response.json();",
                                    "var first_name = pm.environment.get(\"first_name\");",
                                    "pm.test(\"Name must be \" + first_name, function() { pm.expect(jsonData.first_name).to.eql(first_name); });",
                                    "var last_name = pm.environment.get(\"last_name\");",
                                    "pm.test(\"Last name must be \" + last_name, function() { pm.expect(jsonData.last_name).to.eql(last_name); });"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "noauth"
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "accept",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/student/{{student_id}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "student",
                                "{{student_id}}"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "3.Delete student by ID",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function() { pm.response.to.have.status(200); });",
                                    "pm.test(\"Response should not be 'do some magic!'\", function() { pm.response.to.not.have.body(\"do some magic!\"); });"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "noauth"
                        },
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "accept",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/student/{{student_id}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "student",
                                "{{student_id}}"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "4.Find student by wrong ID",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 404\", function() { pm.response.to.have.status(404); });",
                                    "pm.test(\"Response should not be 'do some magic!'\", function() { pm.response.to.not.have.body(\"do some magic!\"); });"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "noauth"
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "accept",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/student/000000000000000000000000",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "student",
                                "000000000000000000000000"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "5.Delete non-existing student",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 404\", function() { pm.response.to.have.status(404); });",
                                    "pm.test(\"Response should not be 'do some magic!'\", function() { pm.response.to.not.have.body(\"do some magic!\"); });"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "noauth"
                        },
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "accept",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/student/000000000000000000000000",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "student",
                                "000000000000000000000000"
                            ]
                        }
                    },
                    "response": []
                }
            ]
        }
    ],
    "variable": [
        {
            "key": "baseUrl",
            "value": "http://localhost:8080/tutorial/1.0.0",
            "type": "string"
        },
        {
            "key": "student_id",
            "value": "0",
            "enabled": true
        },
        {
            "key": "first_name",
            "value": "C8JsxHFRRDqw1fdUKrkp",
            "enabled": true
        },
        {
            "key": "last_name",
            "value": "TI11PacK8o5cUmRCo3at",
            "enabled": true
        }
    ]
}